---
---
<header>
  <nav class="site-nav">
    <a href="/" class="site-title">
      <img src="/img/wm-logo.svg" alt="Web Monetization logo">
      <span>Web Monetization</span>
    </a>
    <button id="menuToggle" class="menu-toggle" aria-controls="nav-menu" aria-expanded="true" aria-label="Toggle Menu" title="Toggle Menu">
      <div id="menuIcon" class="menu-icon">
        <span></span>
        <span></span>
        <span></span>
        <span></span>
      </div>
    </button>
    <ul id="navMenu" class="nav-menu collapsed">
       <li class="nav-link__docs"><a href="/docs/">Docs</a></li>
       <li class="nav-link__spec"><a href="/specification">Specification</a></li>
       <li class="nav-link__github"><a href="https://github.com/WICG/webmonetization/"><img src="/img/icon-github.svg" alt="Link to Github repository"></a></li>
    </ul>
 </nav>
</header>

<style>
  header {
    background-color: hsl(240, 20%, 97%);
    color: hsl(222, 11%, 23%);
  }

  .site-nav {
    display: flex;
    align-items: center;
    padding-left: var(--space-s);
    padding-right: var(--space-s);
    position: relative;
    max-width: 95rem;
    margin-left: auto;
    margin-right: auto;
  }

  .site-title {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .site-title img {
    width: 2.5em;
    flex: none;
  }

  .site-title span {
    font-size: larger;
    white-space: nowrap;
  }

  a {
    text-decoration: none;
    color: var(--sl-color-text);
    padding-top: var(--space-xs);
    padding-bottom: var(--space-xs);
  }

  .menu-toggle {
    border: 0;
    background: initial;
    padding: var(--space-xs) 0;
    margin-left: auto;
  }

  .menu-icon {
    position: relative;
    transform: rotate(0deg);
    transition: .5s ease-in-out;
    cursor: pointer;
    height: 1em;
    width: 1.5em;
  }

  .menu-icon span {
    display: block;
    position: absolute;
    height: 4px;
    width: 100%;
    background: var(--sl-color-gray-4);
    border-radius: 4px;
    opacity: 1;
    left: 0;
    transform: rotate(0deg);
    transition: .25s ease-in-out;
  }

  .menu-icon span:nth-child(1) {
    top: 0;
  }

  .menu-icon span:nth-child(2),
  .menu-icon span:nth-child(3) {
    top: 50%;
  }

  .menu-icon span:nth-child(4) {
    top: 100%;
  }

  .menu-icon.open span:nth-child(1),
  .menu-icon.open span:nth-child(4) {
    top: 50%;
    width: 0%;
    left: 50%;
  }

  .menu-icon.open span:nth-child(2) {
    transform: rotate(45deg);
  }

  .menu-icon.open span:nth-child(3) {
    transform: rotate(-45deg);
  }
  .nav-link__github {
    margin-left: auto;
    flex: none;
  }

  .nav-link__github img {
    height: 1.5em;
    width: 1.5em;
  }

  .collapsed {
    display: none;
  }

  @media screen and (max-width: 539px) {
    .nav-menu {
      position: absolute;
      top: 100%;
      background-color: white;
      width: 100%;
      list-style: none;
      padding: 0;
      left: 0;
      right: 0;
    }

    .nav-menu a {
      display: block;
      padding-left: var(--space-xs);
      padding-right: var(--space-xs);
    }
  }

  @media screen and (min-width: 540px) {
    .nav-menu {
      display: flex;
      gap: var(--space-s);
      align-items: center;
      list-style-type: none;
      flex: 1;
    }

    .menu-toggle {
      display: none;
    }

    .collapsed {
      display: block;
    }
  }
</style>

<script>
  const toggle = document.getElementById('menuToggle');
  const icon = document.getElementById('menuIcon');
  const menu = document.getElementById('navMenu');
  const isWide = window.matchMedia('(min-width: 540px)');

  const handleClick = () => {
    if (toggle?.getAttribute('aria-expanded') === 'false') {
      toggle.setAttribute('aria-expanded', 'true');
      menu?.classList.remove("collapsed");
      icon?.classList.add("open");
    } else {
      toggle?.setAttribute('aria-expanded', 'false');
      menu?.classList.add("collapsed");
      icon?.classList.remove("open");
    }
  };

  const handleResize = (evt: MediaQueryList | MediaQueryListEvent) => { 
    if (evt.matches) {
      toggle?.setAttribute('aria-expanded', 'false');
      menu?.classList.remove("collapsed");
      icon?.classList.remove("open");
    }  else {
      toggle?.setAttribute('aria-expanded', 'false');
      menu?.classList.add("collapsed");
      icon?.classList.remove("open");
    }
  };

  toggle?.addEventListener('click', handleClick, false);
  isWide.addEventListener('change', evt => handleResize(evt));
  handleResize(isWide);
</script>
