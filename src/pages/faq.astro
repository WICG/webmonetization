---
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import Base from '../layouts/Base.astro'
import FaqHeroImg from '../assets/faq-hero-icon.png'
import faqContent from '../data/faq'
const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<Base title={t('pages.faq.title')} description={t('pages.faq.description')}>
  <section class='section'>
    <div class='contentWrapper faq-hero'>
      <h2>Frequently asked <br /><span>Questions</span></h2>
      <img src={FaqHeroImg.src} width='594' height='589' />
    </div>
  </section>

  <section class='section'>
    <div class='contentWrapper faq-categories'>
      {
        faqContent.map((category) => (
          <div class='faq-category'>
            <h3>{category.title}</h3>
            {category.questions.map((item) => (
              <details class='faq-item'>
                <summary>{item.question}</summary>
                <div>
                  <div>
                    {item.answer.map((answer) => (
                      <p set:html={answer} />
                    ))}
                  </div>
                </div>
              </details>
            ))}
          </div>
        ))
      }
    </div>
  </section>
</Base>

<style>
  .contentWrapper.faq-hero,
  .contentWrapper.faq-categories {
    padding-inline: var(--padding-md);
  }

  .faq-hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: var(--spacing-lg);
  }

  .faq-hero img {
    flex-grow: 1;
    width: 100%;
    max-width: 37rem;
    height: auto;
    aspect-ratio: 594/589;
  }

  .faq-categories {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-2xl);
  }

  .faq-category h3 {
    margin-bottom: var(--spacing-lg);
  }

  details.faq-item {
    margin-bottom: var(--spacing-xs);
    padding: var(--padding-md);
    border-radius: var(--pill-rounding);
    background-color: white;
    position: relative;
  }

  details.faq-item:last-of-type {
    margin-bottom: 0;
  }

  details.faq-item::after {
    content: '';
    mask: url('/img/faq-icon.svg');
    display: block;
    position: absolute;
    top: var(--spacing-md);
    right: var(--spacing-md);
    width: 1.25rem;
    height: 1.25rem;
    background-color: black;
    transition: transform 0.2s ease-in-out;
  }

  details[open].faq-item::after {
    transform: rotate(45deg);
    background-color: var(--button-secondary-color);
  }

  details.faq-item summary {
    display: block;
    padding-right: var(--padding-2xl);
    cursor: pointer;
  }

  details[open].faq-item summary {
    font: var(--font-standard-bold);
  }

  details.faq-item p {
    padding-right: var(--padding-2xl);
    margin-bottom: var(--spacing-md);
  }

  details.faq-item p:last-of-type {
    margin-bottom: unset;
  }

  details.faq-item > div {
    overflow: hidden;
    display: grid;
    margin-top: var(--spacing-md);
    animation-duration: 0.2s;
  }

  details > .animation {
    animation-name: grid-expand;
    animation-timing-function: ease-out;
  }

  details > .collapsing {
    animation-direction: reverse;
    animation-timing-function: ease-in;
  }

  details > div > div {
    min-height: 0;
  }

  @keyframes grid-expand {
    0% {
      grid-template-rows: 0fr;
    }
    100% {
      grid-template-rows: 1fr;
    }
  }

  @media (min-width: 768px) {
    .faq-hero {
      flex-direction: row;
      justify-content: space-between;
      gap: unset;
      text-align: left;
    }

    .faq-hero h2 {
      font: var(--font-display-2);
    }

    .faq-hero h2 span {
      font-weight: bold;
    }

    .faq-categories {
      gap: 10rem;
    }

    .faq-category h3 {
      font: var(--font-h2);
    }

    details.faq-item {
      padding: var(--padding-2xl);
    }

    details.faq-item p:last-of-type {
      margin-bottom: var(--padding-lg);
    }

    details.faq-item::after {
      top: var(--spacing-2xl);
      right: var(--spacing-2xl);
    }
  }
</style>

<script>
  // Credit: adapted from this article on animating <details> elements:
  // https://linkedlist.ch/animate_details_element_60/
  document
    .querySelectorAll<HTMLElement>('.faq-item summary')
    .forEach((element) =>
      element.addEventListener('click', (event) => {
        if (event.target instanceof HTMLElement) {
          const detailsElement = event.target.parentElement
          const contentElement = event.target.nextElementSibling

          if (!(contentElement instanceof HTMLElement) || !detailsElement)
            return

          // Chrome sometimes has a hiccup and gets stuck.
          if (contentElement.classList.contains('animation')) {
            contentElement.classList.remove('animation', 'collapsing')
            // ... enforce a reflow so that collapsing may be animated again,
            void element.offsetWidth
            // ... and fallback to the default behaviour this time.
            return
          }

          const onAnimationEnd = (cb: (event: AnimationEvent) => void) =>
            contentElement.addEventListener('animationend', cb, { once: true })
          // request an animation frame to force Safari 16 to actually perform the animation
          requestAnimationFrame(() => contentElement.classList.add('animation'))
          onAnimationEnd(() => contentElement.classList.remove('animation'))

          const isDetailsOpen = detailsElement.getAttribute('open') !== null
          if (isDetailsOpen) {
            // prevent default collapsing and delay it until the animation has completed
            event.preventDefault()
            contentElement.classList.add('collapsing')
            onAnimationEnd(() => {
              detailsElement.removeAttribute('open')
              contentElement.classList.remove('collapsing')
            })
          }
        }
      })
    )
</script>
